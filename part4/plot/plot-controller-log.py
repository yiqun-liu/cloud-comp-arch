import sys
import json
import matplotlib.pyplot as plt

# deal with the None in y
def plot_robust(ax, xs, ys, label):
    xs = [x for x, y in zip(xs, ys) if y is not None]
    ys = [y for y in ys if y is not None]

    # normalize
    if label.startswith('sys'):
        ys = [4 * y for y in ys]

    ax.plot(xs, ys, label=label, marker='o')

def main(file_path):
    with open(file_path, 'r') as f:
        logs = json.load(f)

    fig, ax = plt.subplots(tight_layout=True)

    base_time = min([records[0][1] for records in logs.values()])
    # we keep the least 5 digits correct: useful for us align with mcperf logs
    # TODO cooperate mcperf information in the plot
    base_time = base_time // 100000 * 100000
    for name, records in logs.items():
        times = [r[1] - base_time for r in records]

        u5 = [r[0][2] for r in records]
#        u1 = [r[0][0] for r in records]
#        u3 = [r[0][1] for r in records]
#        u10 = [r[0][3] for r in records]

        plot_robust(ax, times, u5, label=name + '-u5')

    ax.set_ylabel('cpu usage')
    ax.set_xlabel('timestamp')

    ax.legend()
    plt.show()

# the only argument should be path to json file generated by controller
if __name__ == '__main__':
    main(sys.argv[1])
